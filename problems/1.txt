Given a list of numbers and a number k, return whether any two numbers from the list add up to k.
For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.
Bonus: Can you do this in one pass?


import java.util.*;
import java.lang.*;
import java.io.*;

// The main method must be in a class named "Main".

/*
This problem was recently asked by Google.

Given a list of numbers and a number k, return whether any two numbers from the list add up to k.

For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.
Bonus: Can you do this in one pass?
*/


class Main {
    public static void main(String[] args) {
        System.out.println("Hello world!");
        System.out.println(problem1());
    
    
    }

    public static boolean problem1() {
        System.out.println("Problem 1 - Solution");
        
        int[] nums = {10,15,3,7};
        Arrays.sort(nums);

        int i=0;
        int j=nums.length-1;
        int k=17;
        int sum=0;
        
        while(i<j){
            System.out.println("while start");
            System.out.println("i="+i);
            System.out.println("j="+j);
            sum = nums[i] + nums[j];
            if(sum>k) {
                j--;
            } else if(sum<k) {
                i++;
            } else if (sum==k) {
                return true;
            }
            System.out.println("while end");
            
            
        }
        return false;
    }
    
}
